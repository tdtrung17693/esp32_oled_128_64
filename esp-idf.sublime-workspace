{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"to",
				"to_cp\tuint32_t to_cp(const char *chr, uint32_t *ret)"
			],
			[
				"fontU",
				"fontunifont15ptDescriptors\tconst FontDesc [225] fontunifont15ptDescriptors"
			],
			[
				"oled_draw",
				"oled_draw_text\tvoid oled_draw_text(unsigned char *c, int x0, int y0)"
			],
			[
				"oled_s",
				"oled_set_pixel\tvoid oled_set_pixel(int x, int y)"
			],
			[
				"uni",
				"unicode_helper.h"
			],
			[
				"fontl",
				"fontled_display750ptDescriptors\tconst FontDesc [225] fontled_display750ptDescriptors"
			],
			[
				"code",
				"codePoint\tuint32_t codePoint"
			],
			[
				"ESP",
				"ESP_LOGI\tESP_LOGI(tag, format, ...)"
			],
			[
				"utf",
				"utf8_to_ucs2"
			],
			[
				"getw",
				"getwchar\twint_t getwchar()"
			],
			[
				"fontu",
				"fontunifont15ptDescriptors\tconst int [] fontunifont15ptDescriptors"
			],
			[
				"fontFre",
				"fontFreeSans13pt\tconst uint8_t [2783] fontFreeSans13pt"
			],
			[
				"fontFreeSan",
				"fontFreeSans13ptDescriptors\tconst FontDesc [225] fontFreeSans13ptDescriptors"
			],
			[
				"fonts",
				"fontSourceHanSansJPNormal16pt\tconst uint8_t [3777] fontSourceHanSansJPNormal16pt"
			],
			[
				"fontS",
				"fontSourceHanSansJPNormal16ptInfo\tconst FontInfo fontSourceHanSansJPNormal16ptInfo"
			],
			[
				"fontSource",
				"fontSourceHanSansJPNormal16ptDescriptors\tconst FontDesc [224] fontSourceHanSansJPNormal16ptDescriptors"
			],
			[
				"font",
				"fontEnvyCodeR16pt\tconst uint8_t [2042] fontEnvyCodeR16pt"
			],
			[
				"fontE",
				"fontEnvyCodeR16ptDescriptors\tconst FontDesc [224] fontEnvyCodeR16ptDescriptors"
			],
			[
				"uin",
				"uint32_t\tuint32_t"
			],
			[
				"strl",
				"strlen\tsize_t strlen(const char *)"
			],
			[
				"text",
				"text_dims\tuint32_t [3] text_dims"
			],
			[
				"ESP_",
				"ESP_LOGI\tESP_LOGI(tag, format, ...)"
			],
			[
				"char",
				"charDescIndex\tconst uint32_t charDescIndex"
			],
			[
				"fon",
				"fontDesc\tconst FontDesc * fontDesc"
			],
			[
				"fontSou",
				"fontSourceHanSansJPNormal16pt\tconst uint8_t [3777] fontSourceHanSansJPNormal16pt"
			],
			[
				"fontSourceHa",
				"fontSourceHanSansJPNormal16ptDescriptors\tconst FontDesc [224] fontSourceHanSansJPNormal16ptDescriptors"
			],
			[
				"oled_d",
				"oled_display\tvoid oled_display()"
			],
			[
				"oled",
				"oled_lib.h\tmain"
			],
			[
				"oled_dr",
				"oled_draw_line\tvoid oled_draw_line(int x_1, int y_1, int x_2, int y_2)"
			],
			[
				"roun",
				"round\tdouble round(double)"
			],
			[
				"set_p",
				"oled_set_pixel\tvoid oled_set_pixel(int x, int y)"
			],
			[
				"x",
				"x_1\tint x_1"
			],
			[
				"flo",
				"floor\tdouble floor(double)"
			],
			[
				"ol",
				"oled_draw_circle\tvoid oled_draw_circle(uint8_t x_c, uint8_t y_c, uint8_t r)"
			],
			[
				"sq",
				"sqrt\tdouble sqrt(double)"
			],
			[
				"uint",
				"uint8_t\tuint8_t"
			],
			[
				"oled_",
				"oled_display_task\tvoid oled_display_task(void *params)"
			],
			[
				"portT",
				"portTICK_PERIOD_MS\tportTICK_PERIOD_MS"
			],
			[
				"colo",
				"colorC\tuint8_t colorC"
			],
			[
				"i2c_mas",
				"i2c_master_write_byte\tesp_err_t i2c_master_write_byte(i2c_cmd_handle_t cmd_handle, uint8_t data, bool ack_en)"
			],
			[
				"i2c_writ",
				"i2c_master_write_byte\tesp_err_t i2c_master_write_byte(i2c_cmd_handle_t cmd_handle, uint8_t data, bool ack_en)"
			],
			[
				"ESP_DEFA",
				"ESP_INTR_FLAG_DEFAULT"
			],
			[
				"sc",
				"scl_io_num\tgpio_num_t scl_io_num"
			],
			[
				"GPIO_PIN_",
				"GPIO_PIN_REG_10\tGPIO_PIN_REG_10"
			],
			[
				"sda_",
				"sda_io_num\tgpio_num_t sda_io_num"
			],
			[
				"m",
				"mode\ti2c_mode_t mode"
			],
			[
				"http",
				"http_server_serve\tvoid http_server_serve(struct netconn *conn)"
			],
			[
				"netcon",
				"netconn"
			],
			[
				"inde",
				"index_data\tchar [141] index_data"
			],
			[
				"NETCONN_N",
				"NETCONN_NOCOPY\tNETCONN_NOCOPY"
			],
			[
				"IP_ADD",
				"IP_ADDR_ANY\tIP_ADDR_ANY"
			],
			[
				"sock",
				"sockets.h\tlwip"
			],
			[
				"SYS",
				"SYSTEM_EVENT_STA_START"
			],
			[
				"http_",
				"http_accept\tvoid http_accept(void *arg, struct tcp_pcb *pcb)"
			],
			[
				"index",
				"index_data"
			],
			[
				"tcp",
				"tcp.h\tlwip"
			],
			[
				"wifin",
				"wifi_init_sta\tvoid wifi_init_sta()"
			],
			[
				"wifi_init",
				"wifi_init_softap\tvoid wifi_init_softap()"
			],
			[
				"ESPLO",
				"ESP_LOGI\tESP_LOGI(tag, format, ...)"
			],
			[
				"i",
				"if\tIf Condition"
			],
			[
				"nvsF",
				"nvs_flash_erase\tesp_err_t nvs_flash_erase()"
			],
			[
				"esp_wifi_con",
				"esp_wifi_set_config\tesp_err_t esp_wifi_set_config(wifi_interface_t interface, wifi_config_t *conf)"
			],
			[
				"xEven",
				"xEventGroupCreate\tEventGroupHandle_t xEventGroupCreate()"
			],
			[
				"ESP_CHE",
				"ESP_ERROR_CHECK\tESP_ERROR_CHECK(x)"
			],
			[
				"wifi_ini",
				"wifi_init_config_t\twifi_init_config_t"
			],
			[
				"even",
				"event_handler\tesp_err_t event_handler(void *ctx, system_event_t *event)"
			],
			[
				"esp_event",
				"esp_event_loop_init\tesp_err_t esp_event_loop_init(system_event_cb_t cb, void *ctx)"
			],
			[
				"ESP_ERR",
				"ESP_ERROR_CHECK\tESP_ERROR_CHECK(x)"
			],
			[
				"tcpi_",
				"tcpip_adapter_init\tvoid tcpip_adapter_init()"
			],
			[
				"xEve",
				"xEventGroupCreate\tEventGroupHandle_t xEventGroupCreate()"
			],
			[
				"wifi",
				"wifi_event_group\tEventGroupHandle_t wifi_event_group"
			],
			[
				"event",
				"event_info\tsystem_event_info_t event_info"
			],
			[
				"ip4add",
				"ip4addr_ntoa\tchar * ip4addr_ntoa(const ip4_addr_t *addr)"
			],
			[
				"nvs",
				"nvs_flash.h\t"
			],
			[
				"espwi",
				"esp_wifi.h\t"
			],
			[
				"esps",
				"esp_system.h\t"
			],
			[
				"free",
				"FreeRTOS.h\tfreertos"
			],
			[
				"esp_wif",
				"esp_wifi_connect\tesp_err_t esp_wifi_connect()"
			],
			[
				"event_",
				"event_id\tsystem_event_id_t event_id"
			],
			[
				"inc",
				"inc\t#include \"â€¦\""
			],
			[
				"re",
				"recipeEditor.jsx"
			],
			[
				"strin",
				"stringify"
			],
			[
				"rend",
				"renderPage"
			],
			[
				"tex",
				"text-align"
			],
			[
				"Rec",
				"RecipeBox"
			],
			[
				"Form",
				"FormGroup"
			],
			[
				"red",
				"renderErrors"
			],
			[
				"middl",
				"webpackMiddleware"
			],
			[
				"webpac",
				"webpackConfig"
			],
			[
				"export",
				"export:variable\tES6 Module Export Variable"
			],
			[
				"fail",
				"failureFlash"
			],
			[
				"new",
				"newUser"
			],
			[
				"f",
				"fun\tFunction"
			],
			[
				"try",
				"try\tTry/Except"
			]
		]
	},
	"buffers":
	[
		{
			"file": "main/main.c",
			"settings":
			{
				"buffer_size": 2989,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "main/oled_lib.c",
			"settings":
			{
				"buffer_size": 11226,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "main/font_struct.h",
			"settings":
			{
				"buffer_size": 238,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "main/oled_lib.h",
			"settings":
			{
				"buffer_size": 996,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "main/unicode_helper.c",
			"settings":
			{
				"buffer_size": 1334,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "main/unicode_helper.h",
			"settings":
			{
				"buffer_size": 79,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/tdtrung17693/PycharmProjects/freetype/unifont15pt.h",
			"settings":
			{
				"buffer_size": 46261,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "ESP-IDF",
	"build_system_choices":
	[
		[
			[
				[
					"ESP-IDF",
					""
				],
				[
					"ESP-IDF",
					"Build"
				],
				[
					"ESP-IDF",
					"Menuconfig"
				],
				[
					"ESP-IDF",
					"Clean"
				],
				[
					"ESP-IDF",
					"Flash"
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/Vintageous/Vintageous.sublime-build",
					""
				],
				[
					"Packages/Vintageous/Vintageous.sublime-build",
					"Vintageous - Test (All)"
				],
				[
					"Packages/Vintageous/Vintageous.sublime-build",
					"Vintageous - Test (This File Only)"
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				]
			],
			[
				"ESP-IDF",
				"Flash"
			]
		],
		[
			[
				[
					"ESP-IDF",
					""
				],
				[
					"ESP-IDF",
					"Build"
				],
				[
					"ESP-IDF",
					"Menuconfig"
				],
				[
					"ESP-IDF",
					"Clean"
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/Vintageous/Vintageous.sublime-build",
					""
				],
				[
					"Packages/Vintageous/Vintageous.sublime-build",
					"Vintageous - Test (All)"
				],
				[
					"Packages/Vintageous/Vintageous.sublime-build",
					"Vintageous - Test (This File Only)"
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				]
			],
			[
				"ESP-IDF",
				""
			]
		],
		[
			[
				[
					"PlatformIO",
					""
				],
				[
					"PlatformIO",
					"Build"
				],
				[
					"PlatformIO",
					"Clean"
				],
				[
					"PlatformIO",
					"Test"
				],
				[
					"PlatformIO",
					"Upload"
				],
				[
					"PlatformIO",
					"Upload using Programmer"
				],
				[
					"PlatformIO",
					"Upload SPIFFS image"
				],
				[
					"PlatformIO",
					"Update platforms and libraries"
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
					""
				],
				[
					"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
					"Run"
				]
			],
			[
				"PlatformIO",
				"Upload"
			]
		],
		[
			[
				[
					"PlatformIO",
					""
				],
				[
					"PlatformIO",
					"Build"
				],
				[
					"PlatformIO",
					"Menuconfig"
				],
				[
					"PlatformIO",
					"Clean"
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/Vintageous/Vintageous.sublime-build",
					""
				],
				[
					"Packages/Vintageous/Vintageous.sublime-build",
					"Vintageous - Test (All)"
				],
				[
					"Packages/Vintageous/Vintageous.sublime-build",
					"Vintageous - Test (This File Only)"
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				]
			],
			[
				"PlatformIO",
				"Menuconfig"
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 312.0,
		"last_filter": "flash",
		"selected_items":
		[
			[
				"flash",
				"Build With: ESP-IDF - Flash"
			],
			[
				"sett",
				"Preferences: Settings"
			],
			[
				"setting",
				"Preferences: Settings"
			],
			[
				"ssecim",
				"Set Syntax: C Improved"
			],
			[
				"",
				":$ - EOF"
			],
			[
				"flas",
				"Build With: ESP-IDF - Flash"
			],
			[
				"clang",
				"Clang Format: Format Selection"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"update",
				"Package Control: Upgrade/Overwrite All Packages"
			],
			[
				"fl",
				"Build With: ESP-IDF - Flash"
			],
			[
				"clangfo",
				"Clang Format: Format Selection"
			],
			[
				"format",
				"Clang Format: Select Style"
			],
			[
				"astyl",
				"SublimeAStyleFormmatter: Format Current Selection"
			],
			[
				"astyle",
				"SublimeAStyleFormatter: Format Current File"
			],
			[
				"destroycurrent",
				"Origami: Destroy Current Pane"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"asty",
				"SublimeAStyleFormatter: Format Current File"
			],
			[
				"ss",
				"Set Syntax: C"
			],
			[
				"buil",
				"Build With: ESP-IDF - Build"
			],
			[
				"bash",
				"Terminal View: Open Bash Terminal"
			],
			[
				"pretti",
				"HTMLPrettify"
			],
			[
				"ast",
				"SublimeAStyleFormatter: Format Current File"
			],
			[
				"oric",
				"Origami: Create Pane Below"
			],
			[
				"destr",
				"Origami: Destroy Current Pane"
			],
			[
				"orpull",
				"Origami: Pull File from Pane Below"
			],
			[
				"origami",
				"Origami: Create Pane Above"
			],
			[
				"termin",
				"Terminal View: Open Bash Terminal"
			],
			[
				"terview",
				"Preferences: Terminal View: Color Scheme"
			],
			[
				"termvie",
				"Terminal View: Open Bash Terminal"
			],
			[
				"termi",
				"Terminal: Open"
			],
			[
				"terminalvi",
				"Terminal View: Open Bash Terminal"
			],
			[
				"terminacolo",
				"Preferences: Terminal View: Color Scheme"
			],
			[
				"colo",
				"Preferences: Terminal View: Color Scheme"
			],
			[
				"asyt",
				"SublimeAStyleFormatter: Format Current File"
			],
			[
				"prefe",
				"Preferences: Settings"
			],
			[
				"esfl",
				"Build With: ESP-IDF - Flash"
			],
			[
				"mak",
				"Build With: Make"
			],
			[
				"esp",
				"Build With: ESP-IDF - Build"
			],
			[
				"cimpr",
				"Set Syntax: C Improved"
			],
			[
				"ssc",
				"Set Syntax: C"
			],
			[
				"ssci",
				"Set Syntax: C Improved"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"include",
				"Snippet: #include \"â€¦\""
			],
			[
				"clangcom",
				"EasyClangComplete: Settings"
			],
			[
				"pre",
				"Preferences: Settings"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"re",
				"Package Control: Remove Package"
			],
			[
				"disabl",
				"Package Control: Disable Package"
			],
			[
				"esl",
				"ESLint Formatter: Format this file"
			],
			[
				"eslin",
				"ESLint Formatter: Format this file"
			],
			[
				"emme",
				"Emmet: Rename Tag"
			],
			[
				"eslint",
				"ESLint Formatter: Format this file"
			],
			[
				"ssjav",
				"Set Syntax: JavaScript (Babel)"
			],
			[
				"reload",
				"SublimeLinter: Reload SublimeLinter and its Plugins"
			],
			[
				"color",
				"Color Picker"
			],
			[
				"col",
				"Color Picker: Insert Color"
			],
			[
				"remove ",
				"Package Control: Remove Package"
			],
			[
				"sublimelinter",
				"SublimeLinter: Reload SublimeLinter and its Plugins"
			],
			[
				"esli",
				"ESLint Formatter: Format this file"
			],
			[
				"linter",
				"Preferences: SublimeLinter Settings"
			],
			[
				"ana",
				"Anaconda: Autoformat PEP8 Errors"
			]
		],
		"width": 541.0
	},
	"console":
	{
		"height": 364.0,
		"history":
		[
			"print(settings.get('color_pick_return'))",
			"sublime.run_command('color_pick_api_is_available', {'settings': 'my_shared.sublime-settings'})",
			"settings.set('color_pick_return', None)",
			"settings = sublime.load_settings('my_shared.sublime-settings')",
			"settings.set('color_pick_return', None)",
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/media/Data/Code/nano32_espidf",
		"/media/Data/Code/nano32_espidf/main"
	],
	"file_history":
	[
		"/home/tdtrung17693/esp/esp-idf/components/newlib/include/stdint.h",
		"/media/Data/Code/nano32_espidf/main/oled_lib.c",
		"/media/Data/Code/nano32_espidf/main/oled_lib.h",
		"/media/Data/Code/nano32_espidf/main/unifont15pt.h",
		"/home/tdtrung17693/.config/sublime-text-3/Packages/SublimeAStyleFormatter/SublimeAStyleFormatter.sublime-settings",
		"/home/tdtrung17693/PycharmProjects/freetype/unifont15pt.h",
		"/home/tdtrung17693/esp/xtensa-esp32-elf/lib/gcc/xtensa-esp32-elf/5.2.0/include/stdbool.h",
		"/media/Data/Code/nano32_espidf/esp-idf.sublime-project",
		"/home/tdtrung17693/PycharmProjects/freetype/04b19.h",
		"/home/tdtrung17693/PycharmProjects/freetype/Tamzen5_9b.h",
		"/media/Data/Code/nano32_espidf/main/04b19.h",
		"/media/Data/Code/nano32_espidf/array",
		"/media/Data/Code/nano32_espidf/main/main.c",
		"/media/Data/Code/nano32_espidf/main/unicode_helper.c",
		"/media/Data/Code/nano32_espidf/main/unicode_helper.h",
		"/home/tdtrung17693/test.txt",
		"/home/tdtrung17693/Downloads/OLEDv1.0/OLED_I2C/OLED_I2C.c",
		"/home/tdtrung17693/Downloads/OLEDv1.0/OLED.c",
		"/usr/include/uchar.h",
		"/media/Data/Code/nano32_espidf/main/ledDisplay15pt.h",
		"/home/tdtrung17693/PycharmProjects/freetype/sourceHansSans16pt.h",
		"/home/tdtrung17693/PycharmProjects/freetype/ledDisplay15pt.h",
		"/media/Data/Code/nano32_espidf/main/tamzen8_15br.h",
		"/media/Data/Code/nano32_espidf/main/tamzen5_9b.h",
		"/home/tdtrung17693/PycharmProjects/freetype/Tamzen8_15b.h",
		"/home/tdtrung17693/PycharmProjects/freetype/freeSans13pt.h",
		"/media/Data/Code/nano32_espidf/main/sourceHanSansJP16pt.h",
		"/media/Data/Code/nano32_espidf/main/freeSans13pt.h",
		"/media/Data/Code/nano32_espidf/main/font_struct.h",
		"/home/tdtrung17693/esp/esp-idf/components/newlib/include/inttypes.h",
		"/home/tdtrung17693/PycharmProjects/freetype/envyCode.h",
		"/media/Data/Code/nano32_espidf/main/envyCodeR16pt.h",
		"/media/Data/Code/nano32_espidf/envyCodeR16pt.h",
		"/media/Data/Code/nano32_espidf/main/envyRFont16p.h",
		"/home/tdtrung17693/Downloads/unifonts.c",
		"/home/tdtrung17693/Downloads/unifonts (1).c",
		"/home/tdtrung17693/Downloads/firasans_12.c",
		"/home/tdtrung17693/Arduino/libraries/Waveshare/epdpaint.cpp",
		"/home/tdtrung17693/Arduino/libraries/Waveshare/epdif.cpp",
		"/home/tdtrung17693/Arduino/libraries/Waveshare/epdif.h",
		"/home/tdtrung17693/Downloads/4.2EPD/libraries/epd42/epdif.cpp",
		"/home/tdtrung17693/Arduino/libraries/Waveshare/font8.c",
		"/home/tdtrung17693/Arduino/libraries/Waveshare/font12.c",
		"/home/tdtrung17693/Arduino/libraries/Waveshare/font16.c",
		"/home/tdtrung17693/Arduino/libraries/Waveshare/font20.c",
		"/home/tdtrung17693/Arduino/libraries/Waveshare/font24.c",
		"/home/tdtrung17693/Arduino/libraries/Waveshare/fonts.h",
		"/home/tdtrung17693/Arduino/libraries/Waveshare/epdpaint.h",
		"/home/tdtrung17693/Arduino/libraries/Waveshare/epd2in7.cpp",
		"/home/tdtrung17693/Downloads/4.2EPD/libraries/epd42/epd4in2.cpp",
		"/home/tdtrung17693/esp/esp-idf/components/newlib/include/math.h",
		"/home/tdtrung17693/Arduino/libraries/Waveshare/epd2in7.h",
		"/home/tdtrung17693/Downloads/epd4in2.cpp",
		"/home/tdtrung17693/Downloads/epdpaint.cpp",
		"/home/tdtrung17693/Downloads/4.2EPD/libraries/epd42/epdpaint.h",
		"/home/tdtrung17693/Downloads/epdif.cpp",
		"/home/tdtrung17693/Downloads/GDEW027C44 code/User/stm32f10x_it.h",
		"/home/tdtrung17693/.config/sublime-text-3/Packages/HTML-CSS-JS Prettify/HTMLPrettify.sublime-settings",
		"/media/Data/Code/nano32_espidf/main/main.bak",
		"/home/tdtrung17693/.config/sublime-text-3/Packages/TerminalView/README.md",
		"/home/tdtrung17693/esp/esp-idf/components/driver/include/driver/i2c.h",
		"/home/tdtrung17693/esp/esp-idf/components/freertos/include/freertos/FreeRTOS.h",
		"/home/tdtrung17693/esp/esp-idf/components/freertos/include/freertos/portmacro.h",
		"/home/tdtrung17693/esp/esp-idf/components/lwip/include/lwip/lwip/err.h",
		"/home/tdtrung17693/esp/esp-idf/components/lwip/include/lwip/lwip/tcp.h",
		"/home/tdtrung17693/esp/esp-idf/components/driver/include/driver/gpio.h",
		"/home/tdtrung17693/esp/esp-idf/components/esp32/include/esp_event_loop.h",
		"/home/tdtrung17693/esp/esp-idf/components/tcpip_adapter/include/tcpip_adapter.h",
		"/home/tdtrung17693/esp/esp-idf/components/lwip/include/lwip/lwip/ip_addr.h",
		"/media/Data/Code/nano32_espidf/Makefile",
		"/home/tdtrung17693/esp/esp-idf/components/esp32/include/esp_err.h",
		"/media/Data/Code/nano32_espidf/main/Kconfig.projbuild",
		"/home/tdtrung17693/esp/esp-idf/components/log/include/esp_log.h",
		"/home/tdtrung17693/esp-idf-template/esp-idf.sublime-project",
		"/home/tdtrung17693/esp/esp-idf/components/freertos/include/freertos/event_groups.h",
		"/home/tdtrung17693/.config/sublime-text-3/Packages/CHeaders/CHeaders.sublime-settings",
		"/home/tdtrung17693/.config/sublime-text-3/Packages/User/CHeaders.sublime-settings",
		"/home/tdtrung17693/.config/sublime-text-3/Packages/ClangAutoComplete/ClangAutoComplete.sublime-settings",
		"/home/tdtrung17693/.config/sublime-text-3/Packages/User/Package Control.sublime-settings",
		"/media/Data/Code/freeCodeCamp/recipe_box/src/recipeBox/recipeEditor.jsx",
		"/media/Data/Code/freeCodeCamp/recipe_box/public/index.html",
		"/media/Data/Code/freeCodeCamp/recipe_box/.eslintrc",
		"/media/Data/Code/freeCodeCamp/recipe_box/src/recipeBox/slidePanel.jsx",
		"/media/Data/Code/freeCodeCamp/recipe_box/src/recipeBox/recipeBox.jsx",
		"/media/Data/Code/freeCodeCamp/recipe_box/webpack.config.js",
		"/media/Data/Code/freeCodeCamp/recipe_box/.babelrc",
		"/media/Data/Code/freeCodeCamp/recipe_box/webpack.config.babel.js",
		"/media/Data/Code/freeCodeCamp/recipe_box/src/App.jsx",
		"/media/Data/Code/freeCodeCamp/recipe_box/package.json",
		"/media/Data/Code/freeCodeCamp/recipe_box/.eslintrc.js",
		"/media/Data/Code/express_react/views/index.pug",
		"/media/Data/Code/express_react/webpack.config.dev.js",
		"/media/Data/Code/express_react/.eslintrc.js",
		"/media/Data/Code/express_react/.babelrc",
		"/media/Data/Code/express_react/package.json",
		"/media/Data/Code/express_react/webpack.config.js",
		"/media/Data/Code/express_react/src/App.jsx",
		"/media/Data/Code/express_react/src/main-app.jsx",
		"/media/Data/Code/express_react/public/index.html",
		"/media/Data/Code/express_react/yarn.lock",
		"/media/Data/Code/express_react/src/common/form/input.jsx",
		"/media/Data/Code/express_react/dist/js/bundle.js",
		"/media/Data/Code/express_lernen/models/user.js",
		"/media/Data/Code/express_lernen/setupPassport.js",
		"/media/Data/Code/express_lernen/views/index.pug",
		"/media/Data/Code/express_lernen/views/edit.pug",
		"/media/Data/Code/express_lernen/views/login.pug",
		"/media/Data/Code/express_lernen/routes.js",
		"/media/Data/Code/express_lernen/views/profile.pug",
		"/media/Data/Code/express_lernen/views/signup.pug",
		"/home/tdtrung17693/Pictures/test.p"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 146.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"unsigned ",
			"0.2",
			"i",
			"ac",
			"*i",
			"i",
			"t",
			"round",
			"x",
			"invert",
			"omvert",
			"swap",
			"fontled_display750pt",
			"35",
			"715",
			"1",
			"Tamzen8x15r15pt",
			"5x9",
			"let",
			"eFast",
			"digitalWriteFast",
			"init",
			"ym",
			"xm",
			"setPixel",
			"uint8_t",
			"static ",
			"b10000001",
			"cgc.setPixel",
			"floor",
			"Math.",
			", ",
			"         ",
			"        ",
			"       ",
			"      ",
			"     ",
			"    ",
			"0",
			"64",
			"32",
			"r",
			"8_t",
			"oled_cmd(",
			"SSD1306_WRITECOMMAND",
			"i2c_master_write_byte",
			"cmd, ",
			"I2C_NUM",
			"disable",
			"OPENSSL_EXAMPLE_RECV_BUF_LEN"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"oled_cmd"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "main/main.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2989,
						"regions":
						{
						},
						"selection":
						[
							[
								2477,
								2477
							]
						],
						"settings":
						{
							"SL.14.region_keys":
							[
							],
							"SL.16.region_keys":
							[
							],
							"SL.186.region_keys":
							[
							],
							"bogo.enabled": false,
							"git_gutter_is_enabled": true,
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true,
							"vintage":
							{
								"_vintageous_glue_until_normal_mode": false,
								"_vintageous_non_interactive": false,
								"_vintageous_processing_notation": false,
								"action": null,
								"action_count": "",
								"mode": "mode_normal",
								"motion": null,
								"motion_count": "",
								"must_capture_register_name": false,
								"normal_insert_count": "1",
								"partial_sequence": "",
								"register": "\"",
								"sequence": "",
								"xpos": 0
							}
						},
						"translation.x": 0.0,
						"translation.y": 1161.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "main/oled_lib.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11226,
						"regions":
						{
						},
						"selection":
						[
							[
								5113,
								5113
							]
						],
						"settings":
						{
							"SL.15.region_keys":
							[
							],
							"SL.262.region_keys":
							[
							],
							"bogo.enabled": false,
							"git_gutter_is_enabled": true,
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true,
							"vintage":
							{
								"_vintageous_glue_until_normal_mode": false,
								"_vintageous_non_interactive": false,
								"_vintageous_processing_notation": false,
								"action": null,
								"action_count": "",
								"mode": "mode_normal",
								"motion": null,
								"motion_count": "",
								"must_capture_register_name": false,
								"normal_insert_count": "1",
								"partial_sequence": "",
								"register": "\"",
								"sequence": "",
								"xpos": 29
							}
						},
						"translation.x": 0.0,
						"translation.y": 3346.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "main/font_struct.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 238,
						"regions":
						{
						},
						"selection":
						[
							[
								238,
								238
							]
						],
						"settings":
						{
							"SL.16.region_keys":
							[
							],
							"SL.241.region_keys":
							[
							],
							"bogo.enabled": false,
							"git_gutter_is_enabled": true,
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"vintage":
							{
								"_vintageous_glue_until_normal_mode": false,
								"_vintageous_non_interactive": false,
								"_vintageous_processing_notation": false,
								"action": null,
								"action_count": "",
								"mode": "mode_normal",
								"motion": null,
								"motion_count": "",
								"must_capture_register_name": false,
								"normal_insert_count": "1",
								"partial_sequence": "",
								"register": "\"",
								"sequence": "",
								"xpos": 18
							}
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "main/oled_lib.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 996,
						"regions":
						{
						},
						"selection":
						[
							[
								996,
								996
							]
						],
						"settings":
						{
							"SL.17.region_keys":
							[
							],
							"SL.35.region_keys":
							[
							],
							"bogo.enabled": false,
							"git_gutter_is_enabled": true,
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"vintage":
							{
								"_vintageous_glue_until_normal_mode": false,
								"action": null,
								"action_count": "",
								"mode": "mode_normal",
								"motion": null,
								"motion_count": "",
								"must_capture_register_name": false,
								"normal_insert_count": "1",
								"partial_sequence": "",
								"register": "\"",
								"sequence": "",
								"xpos": 31
							}
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "main/unicode_helper.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1334,
						"regions":
						{
						},
						"selection":
						[
							[
								999,
								999
							]
						],
						"settings":
						{
							"SL.18.region_keys":
							[
							],
							"SL.54.region_keys":
							[
							],
							"bogo.enabled": false,
							"git_gutter_is_enabled": true,
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true,
							"vintage":
							{
								"_vintageous_glue_until_normal_mode": false,
								"action": null,
								"action_count": "",
								"mode": "mode_normal",
								"motion": null,
								"motion_count": "",
								"must_capture_register_name": false,
								"normal_insert_count": "1",
								"partial_sequence": "",
								"register": "\"",
								"sequence": "",
								"xpos": 27
							}
						},
						"translation.x": 0.0,
						"translation.y": 253.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "main/unicode_helper.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 79,
						"regions":
						{
						},
						"selection":
						[
							[
								77,
								77
							]
						],
						"settings":
						{
							"SL.56.region_keys":
							[
							],
							"bogo.enabled": false,
							"git_gutter_is_enabled": true,
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"vintage":
							{
								"_vintageous_glue_until_normal_mode": true,
								"action": null,
								"action_count": "",
								"mode": "mode_insert",
								"motion": null,
								"motion_count": "",
								"must_capture_register_name": false,
								"normal_insert_count": "1",
								"partial_sequence": "",
								"register": "\"",
								"sequence": "",
								"xpos": 0
							}
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/home/tdtrung17693/PycharmProjects/freetype/unifont15pt.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 46261,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								46261
							]
						],
						"settings":
						{
							"SL.260.region_keys":
							[
							],
							"bogo.enabled": false,
							"git_gutter_is_enabled": false,
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false,
							"vintage":
							{
								"action": null,
								"action_count": "",
								"mode": "mode_visual",
								"motion": null,
								"motion_count": "",
								"must_capture_register_name": false,
								"partial_sequence": "",
								"register": "\"",
								"sequence": ""
							}
						},
						"translation.x": 0.0,
						"translation.y": 52175.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 35.0
	},
	"input":
	{
		"height": 57.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": false,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.SublimeLinter Messages":
	{
		"height": 243.0
	},
	"output.astyle_error_message":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 250.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"output.nodejs":
	{
		"height": 284.0
	},
	"output.sftp":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "esp-idf.sublime-project",
	"replace":
	{
		"height": 66.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"unico",
				"main/unicode_helper.h"
			],
			[
				"unicode",
				"main/unicode_helper.c"
			],
			[
				"lib.h",
				"main/oled_lib.h"
			],
			[
				"unifon",
				"main/unifont15pt.h"
			],
			[
				"fon",
				"main/font_struct.h"
			],
			[
				".pr",
				"esp-idf.sublime-project"
			],
			[
				"oled",
				"main/oled_lib.c"
			],
			[
				"0",
				"main/04b19.h"
			],
			[
				"main",
				"main/main.c"
			],
			[
				"sou",
				"main/sourceHanSansJP16pt.h"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/esp-idf-template/esp-idf.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
		"_vintageous_reset_during_init": true,
		"vintage":
		{
			"_cmdline_cd": "/media/Data/Code/nano32_espidf/main"
		}
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 243.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
